# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: halt frontend CI

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - run: npm i
    - run: npm run generate
    - name: Firebase GitHub Action
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: "${{ secrets.GITHUB_TOKEN }}"
        firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}"
        projectId: halt-group
        channelId: live
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

#         FIREBASE_TOKEN - Required if GCP_SA_KEY is not set. The token to use for authentication. 
#         This token can be aquired through the firebase login:ci command.

# GCP_SA_KEY - Required if FIREBASE_TOKEN is not set. A normal service account key(json format)
#  or a base64 encoded service account key with the Firebase Admin role in the project.
#   If you're deploying functions, you would also need the Cloud Functions Developer role. 
#   Since the deploy service account is using the App Engine default service account in the deploy process,
#    it also needs the Service Account User role. If you're only doing Hosting, 
# Firebase Hosting Admin is enough. https://firebase.google.com/docs/hosting/github-integration